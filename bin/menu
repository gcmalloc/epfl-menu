#!/usr/bin/env python2

#
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <gcmalloc@gmail.com> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return gcmalloc.
# ----------------------------------------------------------------------------
#

import sys
import codecs
import locale
import epfl.menu
import re
import argparse

sys.stdout = codecs.getwriter(locale.getpreferredencoding())(sys.stdout) 

def print_parsed_menu(resto_regexp='', supper=False):
    restos = epfl.menu.get(supper)
    clean_resto_list = filter(lambda a: re.search(resto_regexp, a[0], flags=re.IGNORECASE), restos.iteritems())
    for (resto_name, resto) in  clean_resto_list:
        print(resto_name)
        for (menu_name, menu) in resto.iteritems():
            print("\t" + menu_name)
            for line in menu:
                print("\t"*2 + line)
            print("")

def createParser():
    parser = argparse.ArgumentParser(description='Pretty print the epfl menu')
    parser.add_argument('restaurant_regex', nargs='?', default='',
                       help='a regex that match the desired restaurant')
    parser.add_argument('-s', action='store_true',
                       default=False,
                       help='Print the menu for the supper')
    return parser

try:
    parser = createParser()
    parsed_args = parser.parse_args()
    print_parsed_menu(parsed_args.restaurant_regex, parsed_args.s)
except IOError:
    print("Error while parsing the menu")
